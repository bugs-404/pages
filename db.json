{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/affix.js","path":"js/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/exturl.js","path":"js/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/js.cookie.js","path":"js/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/post-details.js","path":"js/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scroll-cookie.js","path":"js/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scrollspy.js","path":"js/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1554344343169},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1554344343169},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1554344343170},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1554344343170},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1554344343170},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1554344343178},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1554344343169},{"_id":"source/_posts/2019-04-01-让Docker和Consul和谐相处.md","hash":"7fd24cf6412a4a0400dc213a8be01079bb99a64f","modified":1554344382468},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1554344343170},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1554344343170},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1554344343171},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1554344343171},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1554344343171},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1554344343171},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1554344343171},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1554344343171},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1554344343171},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1554344343172},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1554344343172},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1554344343172},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1554344343176},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1554344343176},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1554344343177},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1554344343177},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1554344343177},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1554344343177},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1554344343178},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1554344343177},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1554344343172},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1554344343172},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1554344343173},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1554344343173},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1554344343173},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1554344343173},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1554344343173},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1554344343173},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1554344343173},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1554344343174},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1554344343175},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1554344343175},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1554344343175},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1554344343176},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1554344343176},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1554344343176},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1554344343179},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1554344343181},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1554344343189},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1554344343189},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1554344343190},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1554344343190},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1554344343190},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1554344343190},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1554344343191},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1554344343193},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1554344343193},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1554344343194},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1554344343194},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1554344343174},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1554344343174},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1554344343174},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1554344343174},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1554344343175},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1554344343175},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1554344343179},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1554344343179},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1554344343179},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1554344343179},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1554344343180},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1554344343180},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1554344343180},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1554344343180},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1554344343180},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1554344343181},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1554344343181},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1554344343181},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1554344343183},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1554344343183},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1554344343186},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1554344343191},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1554344343191},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1554344343192},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1554344343192},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1554344343192},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1554344343192},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1554344343186},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1554344343185},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1554344343189},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1554116381000},{"_id":"themes/next/bower.json","hash":"8fa4f26f5205cbc64d33318d1be5d35b2667398c","modified":1554116381000},{"_id":"themes/next/README.md","hash":"7958c3f70b2133b479ddaf525cc4b6d87a37e04a","modified":1554116381000},{"_id":"themes/next/_config.yml","hash":"82faa1cfe688f372141bf9f796016a6a30a5cb81","modified":1554356089434},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1554116381000},{"_id":"themes/next/gulpfile.coffee","hash":"23bd9587807edc4dbecb5c5a29ab96ade24458b5","modified":1554116381000},{"_id":"themes/next/package.json","hash":"888bcacea284ec536a1428ad957a78dfb3ec255d","modified":1554116381000},{"_id":"source/_posts/2019-04-01-use-docker-and-consul.md","hash":"7fd24cf6412a4a0400dc213a8be01079bb99a64f","modified":1554344382468},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1554116381000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"0d2f22ea09dd1ef63c66164e048d8239d2ccb2b8","modified":1554116381000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1554116381000},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1554116381000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"212a36d57495990b5f56e46ca8dce1d76c199660","modified":1554116381000},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1554116381000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1554116381000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1554116381000},{"_id":"themes/next/docs/MATH.md","hash":"e6023505dcccaef0b856102543585a13fc6af0b1","modified":1554116381000},{"_id":"themes/next/languages/de.yml","hash":"9e524b2bdfb848504b93a51c5650e76bba5fa9e0","modified":1554116381000},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1554116381000},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1554116381000},{"_id":"themes/next/languages/fr.yml","hash":"d37a5d82b499a2f082fe9bbf3ad9f11b36b6b837","modified":1554116381000},{"_id":"themes/next/languages/id.yml","hash":"1c4868837f5109f1df863b04fe627352c31d404b","modified":1554116381000},{"_id":"themes/next/languages/it.yml","hash":"b30ff77ad8044e3b021a3b09187cd377dc789fd2","modified":1554116381000},{"_id":"themes/next/languages/ja.yml","hash":"1dc35e436da6214cdb3c2ff44bc4a06d0be5b9a0","modified":1554116381000},{"_id":"themes/next/languages/ko.yml","hash":"20bfaa7600d35235996c18e5c13dcef89c119626","modified":1554116381000},{"_id":"themes/next/languages/nl.yml","hash":"1c44b3cb2f817808607f3bf6ef47f58ce7599995","modified":1554116381000},{"_id":"themes/next/languages/pt.yml","hash":"8ddac820e2c17b484b56c0da8881e142b10e221b","modified":1554116381000},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1554116381000},{"_id":"themes/next/languages/pt-BR.yml","hash":"08b913a5cf4cc160083069cb4dfb2d66eecd1218","modified":1554116381000},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1554116381000},{"_id":"themes/next/languages/uk.yml","hash":"1eb59e581568da9a81d6e20541b4ada5fc1c55c0","modified":1554116381000},{"_id":"themes/next/languages/vi.yml","hash":"ba7aff8f88e03f69a0acf7f1b90ee03e077ee88e","modified":1554116381000},{"_id":"themes/next/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1554116381000},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1554116381000},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1554116381000},{"_id":"themes/next/layout/_layout.swig","hash":"74701fcf2303d59400587436ab4c244e04df7ad9","modified":1554116381000},{"_id":"themes/next/layout/category.swig","hash":"dda0e6b2139decaf5e865d22ec9d45fdb615a703","modified":1554116381000},{"_id":"themes/next/layout/archive.swig","hash":"7e8f3a41a68e912f2b2aaba905d314306ccaf794","modified":1554116381000},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1554116381000},{"_id":"themes/next/layout/page.swig","hash":"d8a6cbf6f611c5d68d5da430cb6dc7010ff2c7e0","modified":1554116381000},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1554116381000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1554116381000},{"_id":"themes/next/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1554116381000},{"_id":"themes/next/layout/tag.swig","hash":"a6be69a90924c9d2f4d90fb4867234859bd2c2e9","modified":1554116381000},{"_id":"themes/next/layout/post.swig","hash":"f74929fd792541916eb25c2addfb35431be071ba","modified":1554116381000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1554116381000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1554116381000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1554116381000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554116381000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1554116381000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1554116381000},{"_id":"themes/next/docs/ru/README.md","hash":"4d7ef717d0b57288e606996ee56c20ffd59d5a99","modified":1554116381000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1554116381000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"caa624092175d44e3d3a8c6ca23922718da2354c","modified":1554116381000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"b218e30df4126b6adc87684775ac4c86ea7f7958","modified":1554116381000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bc43beb3af74d64fbd3920539d08861e4cadb9a0","modified":1554116381000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1554116381000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1554116381000},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"115ffbde2b3ce01ef1f8c2b3833e6f6794650132","modified":1554116381000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"1b5bd6ae5781137d81dc8667e912d3df6eeab260","modified":1554116381000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1554116381000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b76ccbc658024e86639cfa5f8a3817647fc8d651","modified":1554116381000},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1554116381000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1554116381000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1554116381000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"89b0a0e64637bf5b0cfea0a23642df3d95eedfa4","modified":1554116381000},{"_id":"themes/next/layout/_macro/post.swig","hash":"10187fafe566b3e5bfa4e7e10c77ea9026d9081d","modified":1554116381000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"480d93619479dcfcbec6906803bb38b2dfbeae53","modified":1554116381000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5352f96f4544c1520babf1cec7b44ddf2f8057b3","modified":1554116381000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"07f88421bda86d9d5ff32d130b1cb1196b99a326","modified":1554116381000},{"_id":"themes/next/layout/_partials/github-banner.swig","hash":"6357537ac0bb114aed4d61bafb39e6690a413697","modified":1554116381000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1554116381000},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"06dac109504812b63766a80ede9ddacbd42d227d","modified":1554116381000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"50be1762f60222379a8bef5e42ab1a0f3872b7ff","modified":1554116381000},{"_id":"themes/next/layout/_scripts/exturl.swig","hash":"61ae10d41f67ece004a025077fdb28724af05090","modified":1554116381000},{"_id":"themes/next/layout/_scripts/next-boot.swig","hash":"012e3ece672cc3b13d5e032139f328d3426d7d65","modified":1554116381000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"edaff4766e0c05fd5c889d9dd32884d376bef9d9","modified":1554116381000},{"_id":"themes/next/layout/_scripts/scroll-cookie.swig","hash":"ccd13d73429ef91ef5e8b7d9fa43c8188facdf41","modified":1554116381000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"83470eb401f78f4683907c48ad6760b90730daa3","modified":1554116381000},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"4ccf2abbfd070874265b0436a3eff21f7c998dfb","modified":1554116381000},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"10b61a8bac671e375916a4d234c120117098a78f","modified":1554116381000},{"_id":"themes/next/layout/_third-party/chatra.swig","hash":"eefb68b69b4b0ed558ee0324ccd711990059b20d","modified":1554116381000},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"01ded5e1bad89a6f8d64cd063e3e4e42c20d33bc","modified":1554116381000},{"_id":"themes/next/layout/_third-party/mermaid.swig","hash":"d6e6ddda836bd9e2e8d9767a910c7d3280080e81","modified":1554116381000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"2c4a66be4677d3e4dec3f169ac8a769098dad1fe","modified":1554116381000},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"810a9b2a6059f46c4a2ddb178f1eaa4c5e23750b","modified":1554116381000},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"c28f9dc96ab735daeb7f599f86470aa5a83c03cf","modified":1554116381000},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5db80e8d7ea3f29e998320f79508f7e14342a33c","modified":1554116381000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"cbe40cb67dad15ade967b0f396c1a95b6871f76a","modified":1554116381000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"2398e5cd0cb466953b6e7a42c2b2caddebf3c348","modified":1554116381000},{"_id":"themes/next/layout/_third-party/tidio.swig","hash":"912368c41de675f458b267a49a99ae3e7e420ebb","modified":1554116381000},{"_id":"themes/next/scripts/filters/exturl.js","hash":"79ad823ca803cb00e0bfc648aa6c9d59711e0519","modified":1554116381000},{"_id":"themes/next/scripts/helpers/engine.js","hash":"60eb1554456d9d0e5afc4a2d16f1580a0aa02da8","modified":1554116381000},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1554116381000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1554116381000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"d605918cf819887e9555212dbe12da97fd887a0b","modified":1554116381000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"fcb41c1c81560ed49dc4024654388a28ee7d32b0","modified":1554116381000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"598220fa92ff3540dcab74f633ba41523daa8364","modified":1554116381000},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1554116381000},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1554116381000},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1554116381000},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1554116381000},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1554116381000},{"_id":"themes/next/scripts/tags/button.js","hash":"f3b4f7ae7e58072bbf410d950a99a0b53cbc866d","modified":1554116381000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1554116381000},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1554116381000},{"_id":"themes/next/source/css/main.styl","hash":"e010ec8ac73268a0f137204c89e0080ab8d59b3d","modified":1554116381000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1554116381000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1554116381000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1554116381000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1554116381000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1554116381000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1554116381000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1554116381000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1554116381000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1554116381000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1554116381000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1554116381000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1554116381000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1554116381000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1554116381000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1554116381000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1554116381000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1554116381000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1554116381000},{"_id":"themes/next/source/js/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1554116381000},{"_id":"themes/next/source/js/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1554116381000},{"_id":"themes/next/source/js/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1554116381000},{"_id":"themes/next/source/js/motion.js","hash":"a16bc0b701646bf6653484675f4d5dc0f892d184","modified":1554116381000},{"_id":"themes/next/source/js/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1554116381000},{"_id":"themes/next/source/js/next-boot.js","hash":"e0615efab5f81ba0fd39c0527eac31144deac7ce","modified":1554116381000},{"_id":"themes/next/source/js/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1554116381000},{"_id":"themes/next/source/js/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1554116381000},{"_id":"themes/next/source/js/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1554116381000},{"_id":"themes/next/source/js/utils.js","hash":"703375f367acfbd0596733c34437d1b2681abf72","modified":1554116381000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554116381000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554116381000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554116381000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554116381000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554116381000},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1554116381000},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"fb33f499022cd02722f834fcef1a0e193362cfde","modified":1554116381000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"fc6bafc8c633afadc538c5afa5620ea2a1cdcb84","modified":1554116381000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"02bb5748e8540b024e7f4008a9e640890b45280f","modified":1554116381000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"36eae78a4d7160a1c5e59ca3f7333f00b43d359b","modified":1554116381000},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"71af31fea5913fd30c233e555ef13cf2c9768f72","modified":1554116381000},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"648bf7eda66629592cb915c4004534b3913cbc22","modified":1554116381000},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"5adc60100e129c1d0307bdcaa0c7b8e8375a6ea4","modified":1554116381000},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1554116381000},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"0fa4fadb39467b01cede49f21b22e86b1a2da805","modified":1554116381000},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"2940df694fff28e8bf71b6546b4162f1e38227db","modified":1554116381000},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"3615db591dd910fb9fa96542734c7ec0ef05019c","modified":1554116381000},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"eea95b785c9c36d28e1839619793f66e89773bee","modified":1554116381000},{"_id":"themes/next/layout/_partials/post/reward.swig","hash":"d44f025eb93c99ddf90202d8293ccf80689a00c7","modified":1554116381000},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"ef11b5be5bfb2f0affe82cf521c002b37fef9819","modified":1554116381000},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1554116381000},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"7d1693416a5dc098f4723a53da2e2d1fc2d6e075","modified":1554116381000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1554116381000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a5587bd1f60d35e58618576cec45e662aa44ea1f","modified":1554116381000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"15b542f5b06b7532234af367340b9ed9fcebb0ac","modified":1554116381000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"6f181cc188ecbe5e607fd989756e470d4cb9765d","modified":1554116381000},{"_id":"themes/next/layout/_partials/share/likely.swig","hash":"b45e934d24d76ec6b6a790e92bdb3d56186b0e2a","modified":1554116381000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"5b05f165547391bf231e52f56f3d925efc09bc44","modified":1554116381000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1554116381000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1554116381000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0097e45e7b671f8006b8b2d3c4f95cacc76a983c","modified":1554116381000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"e42604fbb17648484e5f12afe230d826de089388","modified":1554116381000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"a5723950c343d220270bfd27bd30050eda6c3fb3","modified":1554116381000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"798d67e4a736613ab899eabe6529091bbcda7850","modified":1554116381000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"591b2ccd9713ccb922b9fcf5e278b6de9c5ec30b","modified":1554116381000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"8eadb929c9e50e58502ccad2dc2657746f8c592a","modified":1554116381000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"08cd47ef8572121b7811342d3c9a84a338a18191","modified":1554116381000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"050ea01f25cfe492be9bb77b409644d623fdf2dc","modified":1554116381000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1554116381000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"d422beaf35a5d2646feaa098bc3e5adf691c7565","modified":1554116381000},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"4a966b7ffe2d80ff1b3dd0fd14b355766dc5c70f","modified":1554116381000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"438c6f5e6665d72f4ea7ee206011d669246f6102","modified":1554116381000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c754f699c90f6278b9159eff1855c17bc713ee96","modified":1554116381000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"f240a50cd9b627620d9a374a29cf95f0c5e99d7c","modified":1554116381000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"92e04a2b9e0c3df594bc22235d1894e5ad458dfc","modified":1554116381000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"0dd5b315d1da55dbfc10f51a1f8952f72eba2720","modified":1554116381000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"3533167c4295637b91d90f3bae7c651cd128bb6e","modified":1554116381000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"3cfeafefc672d9a7704650ebfb2f9d8668b38d9a","modified":1554116381000},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"c77a2e7ef5f449a445fb4d36b055721fba4a81af","modified":1554116381000},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"e8f91c571ceb4b80aafebc4d36b89fb41b1ae040","modified":1554116381000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"388efc86af7f19c05ad0e26720cd24ee012d20b9","modified":1554116381000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"2cbaae65a020bbb0e9265364488aff8bf84fa48d","modified":1554116381000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"5856d5f701e51dfae1fd6fb486cefde67effd555","modified":1554116381000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4a908b613518878b9b69576c5dba4a5185f552ab","modified":1554116381000},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a7e304b05a44279d3e4f611908d7faef9dc14d7c","modified":1554116381000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"c2cb2f384bc30d31cdccf9794a729c03e687b45c","modified":1554116381000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"601774d8672577aefbcefac82c94b01f0338da31","modified":1554116381000},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"0a13dfd2de52a96901039098c6fc7b515edfc50b","modified":1554116381000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"ea94aa85034c6d1b6bb865aecea55c73f8a14501","modified":1554116381000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b3eaab6a269aa3fcbafe24fd06f0c9206dc12716","modified":1554116381000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1554116381000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1554116381000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2e8fb29aa92325df39054b5450757858c6cebc41","modified":1554116381000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"bb744c9264e8e79ae96431a5463f65fe8de5828a","modified":1554116381000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"a8aa41625b94cf17a7f473ed10dcbe683b1db705","modified":1554116381000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1554116381000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"fc15e277d1504532a09b7b1bd31f900ad95ec4b8","modified":1554116381000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d0e97b205d3320421c380f2eee445457430c8152","modified":1554116381000},{"_id":"themes/next/source/js/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1554116381000},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1554116381000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1554116381000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1554116381000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1554116381000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1554116381000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1554116381000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1554116381000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1554116381000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1554116381000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"7729491514f8ccdf96777de8f71420e6873c5423","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"8175b9a275d04718f6caf6dc6ae483035ad71b0c","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"b98c65006e2546fbf3870c16fbbcbc009dbaab15","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"9d71f34fa13a41b8c8cd2fbdf3fdea608385277c","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"ce826aedf42b9eca424a044452f5d193866726a6","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"ce2aae8f3ed8ceac3a2417e0481044cf69c788aa","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/scrollbar.styl","hash":"d7b8bcf2a6031296c84bb4f4ecfb037af01d2d82","modified":1554116381000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7e51ea64611ab5d678c112b4688d4db4fd2737e2","modified":1554116381000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"6d900b4159eeb869196a619602578bf4d83a117b","modified":1554116381000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"8e0740a9ad349ce5555122325da872923135a698","modified":1554116381000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"bb9b753d3cc3a816340bd697512a83e757f907fb","modified":1554116381000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"7ffde343bdf10add1f052f3c4308a15180eb4404","modified":1554116381000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1554116381000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"6b3340cf57725b312830b9ce377c9e087ba59297","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"9a2d298dbdcbfd758518fd74b63897bc80ce15a5","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"24230e46fc9fb7b8551f97bb36e9bc1f7423098e","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"75d2d92af070eb10273558b2436972d3f12b361c","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa33213aceed7bf4bf25437ca9c1a00f7734ae65","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"7359880e8d85312861fe0871f58b662e627dae0c","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a96e46a6ae86c423f932bc2bc78b9f7453e4e4e5","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6565b4a309325596768d0d32e022c80ef23066cb","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"fc160583f742c94316a0fee05c18468033173534","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"7359880e8d85312861fe0871f58b662e627dae0c","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"1edf4e69d0ec0dc9cefed6c35d3e803e0da4093d","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"57044a6d19eb418c1c3d28787e82c69efa9e0ca6","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"75737591682a2bafa71db4c03fb79e970ac0e7aa","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"b6dac5bbf20f090cf4b67d156f030d7170dfb39c","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5b936dddb7b4de4720cd1e8428b30a2f06d63fb","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"232aedbd44243b3b80c4503c947060d3269c1afc","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"6400c98a9fd2b9a8502269f33355bd7ab3ff793b","modified":1554116381000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1554116381000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1554116381000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1554116381000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1554116381000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1554116381000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4cfeec9434a72d5efc6ca225d3445d084d4590f7","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ca97f0b6990eef947039faede80c56d9c4381ee1","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"6c4990d375b640ee4551e62c48c1cbe4c3d62212","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"a410ed529afd46ddf4a96ecf0de6599488716887","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"c0d9e18a9210fdcaf33e488518b3b288eb58c0a1","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"71d8d1cc22a2a7627a6db7240f0c4902a14f9bea","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"e9dd8de7d98f1478ac7d351624fffd3d8738c905","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"cc6ee18f47f2e1e06df6fa0eadb37079e580fd11","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"6904fd7ea6455e008d9884558b68254608af9a3c","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"2d142c6f39853916256ad8fc79eb6b85f4001ae8","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f1d52954b9a5d1ca8e224382349f525e598dd923","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"80addb9b725e329915c05c27b9fadaf56457a9b3","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"61ca40856e5cacd48e0fa9728fde4605c7dd4c94","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"6a75bb1f2435f4e895cbbb5abbddf6e8f7257804","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"2356226157e8068b0e9bbe2f7d0f74e1ab49199b","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"c961d37190d9bec58a36306c7e716c4e72c4582f","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"1385862a5c0bd845015d165aadbd1a6add7b72d7","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0bf899fab331add63f0c8ead31ca3a3db2ad74d9","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b082d07b13a3d55b4c032fd351dfa9a4fd74edec","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"496f931e3a7e313ba8088fb91bb20789cace72c9","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"3f33bb862c2aa993f54987fbb345da067b79b112","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"5440013a081201ca791582db98159dce93ea9e75","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"8e058c99dd7d41f0bd34c7c28b6ac9fbb17dcb5e","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"d5c8ffed7f2c701052b7a53abaf5ef437374ea72","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"a6c24393dffbdd94dd5c01cdbec5e180b0bfbbbd","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a3170630d8e085889a4bdc20eb7f09c5a0479c47","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"9224b566cd2632f64c1a964e2c786cee93b93286","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"707527c9950a7459355c8abcf4751c0964de0bc1","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"cc83816614f21c7e1d8d3f867d547ff7c658cec4","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-button.styl","hash":"517d541a80d59ad99a3f648be74891e0c7bc72a8","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"c2d9c3b6fbfa65544e6b5a55d3cb2149df04a8a9","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"9a3bfc878ca797946815bed23cd6f92b24a16358","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"8a24b56524a388fbabd408ffc8ba9b56eb9e01ce","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"e425433b81da2714d6fa17c138e1fa750ad810ec","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"8e5c884fb950937afa350c608545455c87aa6129","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"58ec00eebe68d0eebd2eea435c710063877447df","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"967fb3a3c6c851b34ec5df2d945dc266ed63d146","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"21b32840d8b3a14b10770153114778304ba6d1b0","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/tags/pdf.styl","hash":"da8d34729fb6eb0fcb8ee81e67d2be3c02bc1bc4","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"d7501ae01fc45fa15b00d1bc5233b9fffa20a3c9","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"fcda60fecff1479adaf6521cf629cda2506337a8","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"cbc0be5a3285b469858ec9ead48e2ea90bd47ae1","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fc58498d4f5081fcf6218e9e18c5bf2328275bef","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/third-party/copy-code.styl","hash":"688ca3eccc26727d050ad098b32b40934719588a","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"ac7753d536341aa824d7bce0332735e838916995","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"f1d9ee1f86a179741f2478f8c70ca11ab578810e","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"7059e24235b7c57a07f3f8abaa06b0bd6a7eda2f","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"9fac89c8146eb2675721a26f528d7d0f8be7debe","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"61466e3e5459960b5802a267751a0c8018918b0b","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"3ae3f3c276d444862033fd3434c632ad0d2f84e6","modified":1554116381000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"03c4fa9573fddd930552784cf484fd2ee7825323","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1554116381000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1554116381000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1554116381000},{"_id":"source/tags/index.md","hash":"466322c1251f41eb84415496c267d139a8230007","modified":1554356040837}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2019-04-04T05:33:20.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-04-04 13:33:20\ntype: \"tags\"\n---\n","updated":"2019-04-04T05:34:00.837Z","path":"tags/index.html","_id":"cju27fi9h0000z6zl4ejcpbc1","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"使用Docker和Consul(译)","date":"2019-04-01T06:34:52.000Z","_content":"[原文链接](https://medium.com/zendesk-engineering/making-docker-and-consul-get-along-5fceda1d52b9) 可能需要科学上网\n\n&emsp;&emsp;如果你正在管理一个一定规模的互联网技术栈，你很可能听说过[Consul](https://www.consul.io/)。Consul是一个非常棒的解决方案，它能给你的网络提供强大、可靠的服务发现能力。你想要使用它一点也不会让人感到意外。\n\n&emsp;&emsp;让我们假设你已经决定在你的生产环境中使用[Docker](https://www.docker.com/)容器。让我们再假设你打算把容器中的服务发布到Consul的服务注册中心。怎样可靠、轻松的实现这一需求呢？\n\n## 总结\n\n- 直接在你的宿主机上安装Consul和[dnsmasq](http://www.thekelleys.org.uk/dnsmasq/doc.html)，或者把它们安装在使用主机网络(--net=host)的容器里。\n- 在宿主机上创建一个[虚拟网络接口(dummy network interface)](http://www.tldp.org/LDP/nag/node72.html)，并给它分配一个本地IP(例如：169.254.1.1)。\n- 配置Consul，绑定它的HTTP和客户端RPC服务到上述虚拟网络接口的IP地址上。\n- 配置dnsmasq监听虚拟IP地址。\n- 配置你的容器，使用虚拟IP地址作为它们的DNS服务器和Consul服务器。\n- 使用程序如：[Registrator](https://github.com/gliderlabs/registrator)发布你的容器服务。\n<!--more-->\n\n## Consul和容器化应用\n\n&emsp;&emsp;假设你已经决定在你的Docker主机上使用Consul，并且你有以下需求。\n\n- 容器化应用必须能够准确的确定其他应用的地址和端口--不论其他应用是否在同一台主机或者不同的主机。\n- 容器化应用必须能够读写Consul的key-value数据库，并且可靠的执行锁操作\n- 外部主机上的应用必须能够连接这个容器化应用。\n- 健康检查失败的应用必须能够准确的被报告到Consul服务注册中心。\n- 如果一个Docker主机变为不可达，其上的所有应用会被标记为down，并且/或者在Consul服务注册中心取消发布。\n\n## 在你的Docker主机上安装Consul\n\n&emsp;&emsp;在你的网络中的所有主机包括Docker主机上安装、运行Consul Agent 被被认为是一个最佳实践。这有一些很重要的好处：\n&emsp;&emsp;首先，这使得配置服务变得非常简单。运行于宿主机之上的服务(即非容器化的)可以简单的将包含健康检查的服务定义放置到/etc/consul.d/<service_name>.json，Consul Agent 会在启动时或者信号通知时加载它们。然后Consul Agent会将这些服务发不到注册中心并按照你指定的频率执行你设计的健康检查。\n\n&emsp;&emsp;其次，这能够提供可靠的失败监测。如果你的主机因为关机会其他任何原因变得不可达，运行于其他主机上的Consul Agent网络马上会注意到;并且任何注册在这台主机上的服务都会自动被标记为不可用。\n\n&emsp;&emsp;最后，它提供了一个本地节点来接收Consul DNS查询和HTTP API 请求。这些请求可以不必经过网络，这可以简化网络安全策略和减少网络通讯。\n\n&emsp;&emsp;最具争议的问题是：你应该在宿主机还是一个容器里安装Consul Agent?\n\n&emsp;&emsp;答案是：这无所谓-但有所谓的是`网络配置`。Consul本身是一个很小的、自包含的Linux二进制文件；它没有运行时依赖。如果你愿意你当然可以在容器环境中运行它，但是运行环境隔离带来的吸引力由于Consul根本不需要隔离而变得很小。我个人喜欢在宿主机上与其他系统基础服务Docker engine和sshd等服务一样以一等服务来运行Consul。\n\n&emsp;&emsp;当然你也可以选择在容器中运行Consul。Hashicorp 在Docker Hub发布了[官方镜像](https://hub.docker.com/_/consul/)。重要的部分是当你运行容器时，你必须使用 --net=host 选项。\n\n    $ sudo docker run -d --net=host consul:latest\n\n## Consul和回环接口\n\n&emsp;&emsp;当你运行Consul agent时，它监听6个端口来提供不同的功能。以下三个端口是我们重点讨论的：\n\n- HTTP API (默认：8500)：处理来自客户端的HTTP API 请求\n- CLI RPC（默认：8400）：处理来自命令行的请求\n- DNS（默认：8600）：回答DNS查询\n\n&emsp;&emsp;默认情况下，Consul只允许来自回环接口（127.0.0.1）的连接。出于安全考虑，这是一个合理的默认选项，而且在非容器环境下没什么问题。但是对于容器应用来说存在一个难题：容器里边的回环接口和宿主机回环接口是分开的。这是由于在Docker里每个容器都在私有的网络命名空间中运行。所以当一个容器化应用尝试通过地址http://127.0.0.1:8500连接Consul时，它一定会失败。\n\n## 我们考虑过但拒绝的想法\n\n- 配置Consul使之绑定所有接口。这将会使HTTP和CLI RPC 端口项外网开放除非我们配置iptables规则来阻止外部主机的访问。而且我们必须确保服务容器知道它们的宿主机IP地址以便和它的Consul agent通讯。\n- 配置Consul使之绑定Docker网桥IP地址。这个选择能够正常工作但是：(a) 一般网桥接口是Docker动态分配的；(b) 可能存在多个网桥接口；(c) 容器必须清除选择的网桥接口；(d) Consul agent和dnsmasq(下面将描述)在Docker engin启动之前将不会启动。我们不想创建任何不必要的依赖\n- 给每一个容器安装一个Consul agent。Consul的架构体系期待每个主机IP地址一个agent; 并且在大多数环境里，一个Docker主机有一个可访问IP地址。每个容器运行一个Consul agent会造成过个agent加入Consul网络并且声明负责这台主机，引起集群不稳定。\n- 和应用容器分享Consul agent容器的网络。一个容器有且仅有一个网络命名空间。所以如果你的应用程序和Consul agent容器分享网络命名空间，它们之间也将分享网络命名空间。这将剥夺我们使用容器带来的主要好处-网络隔离。\n\n## 虚拟(dummy)接口解决方案\n\n&emsp;&emsp;Linux提供了一个叫做“虚拟接口（dummy interface）”的鲜为人知的网络接口类型。它很像一个回环接口，但是你可以给他分配任何IP，并且你可以创建任意多的虚拟接口（我们只需要一个）。以下是一个例子：\n\n    $ sudo ip link add dummy0 type dummy\n    $ sudo ip link set dev dummy0 up\n    $ ip link show type dummy\n    25: dummy0: <BROADCAST,NOARP> mtu 1500 qdisc noop state DOWN mode DEFAULT qlen 1000\n        link/ether 2a:bb:3e:f6:50:1c brd ff:ff:ff:ff:ff:ff\n\n&emsp;&emsp;我们该为接口分配什么IP?169.254.1.1是一个不错的选择。169.254.0.0/16网段内的地址是本地连接保留地址，这意味着无论在你的本地网络或者互联网上它们都是不可路由的，并且它们对于分配者来说完全是私有的。（一个例外：亚马逊 EC2使用了一个169.254.169.254地址来获取示例元数据，但是我们的操作不会影响这一功能）\n\n    $ sudo ip addr add 169.254.1.1/32 dev dummy0 \n    $ sudo ip link set dev dummy0 up\n    $ ip addr show dev dummy0\n    25: dummy0: <BROADCAST,NOARP,UP,LOWER_UP> mtu 1500 qdisc noqueue state UNKNOWN qlen 1000\n        link/ether 2a:bb:3e:f6:50:1c brd ff:ff:ff:ff:ff:ff\n        inet 169.254.1.1/32 scope global dummy0\n        valid_lft forever preferred_lft forever\n        inet6 fe80::28bb:3eff:fef6:501c/64 scope link \n        valid_lft forever preferred_lft forever\n    \n&emsp;&emsp;每个主机可以使用相同的虚拟接口地址169.254.1.1。这样会大大简化配置，因为你不必为应用程序写脚本来为它确定、提供它需要得IP地址。\n\n## 配置接口\n\n&emsp;&emsp;如果你的linux发行版使用systemd,可以很方便的通过创建两个文件来达到启动时配置虚拟接口。（你可能需要通过你的发行版包管理器来安装systemd-networkd，启用并启动它）\n\n&emsp;&emsp;把下面的内容写到文件`/etc/systemd/network/dummy0.netdev`里:\n\n    [NetDev]\n    Name=dummy0\n    Kind=dummy\n\n&emsp;&emsp;然后把下面的内容写到文件`/etc/systemd/network/dummy0.network`里\n    \n    [Match]\n    Name=dummy0\n\n    [Network]\n    Address=169.254.1.1/32\n\n&emsp;&emsp;运行命令`sudo systemctl restart systemd-networkd`后，dummy0接口应该生成了。\n\n&emsp;&emsp;如果你没有使用`systemd`，查看你的linux发行版文档来学习如何在你的主机创建一个虚拟接口。\n\n## 配置Consul来使用上面的虚拟接口\n\n&emsp;&emsp;接下来让我们配置Consul agent，使它绑定它的HTTP、CLI RPC，和DNS接口到地址169.254.1.1.\n\n&emsp;&emsp;假设angent使用`-config-dir=/etc/consul.d`选项启动。我们可以简单的创建一个文件`/etc/consul.d/interfaces.json`，内容如下，用你的主机IP地址替换`HOST_IP_ADDRESS`变量。\n\n```\n{\n  \"client_addr\": \"169.254.1.1\",\n  \"bind_addr\": \"HOST_IP_ADDRESS\"\n}\n```\n\n&emsp;&emsp;做完之后你需要重启Consul agent。\n\n## 配置dnsmasq使用虚拟接口\n\n&emsp;&emsp;dnsmasq是一个非常棒的软件。它可以在你的主机上扮演本地DNS缓存。它极其的可靠并且可以很容易和Consul的DNS服务集成。我们将在我们的服务器上安装它；绑定它到我们的回环接口和虚拟接口；使他传递请求到Consul agent的 `.consul`；在主机和容器上配置`/etc/resolv.conf`来分发DNS请求到它。\n\n&emsp;&emsp;首先，使用你的系统包管理工具（`yum`， `apt-get`等）来安装dnsmasq\n\n&emsp;&emsp;接下来，配置dnsmasq绑定到回环接口和虚拟接口，并且向前传递Consul查询到agent.创建一个文件 `/etc/dnsmasq.d/consul.conf`，内容如下\n\n```\nserver=/consul/169.254.1.1#8600\nlisten-address=127.0.0.1\nlisten-address=169.254.1.1\n```\n然后重启dnsmasq.\n\n## 组合起来：容器、Consul、DNS\n\n&emsp;&emsp;现在让一切正常运行的关键是确保这些容器和容器内运行的的代码在解析DNS查询的时候指向正确的地址或连接到Consul的HTTP API\n\n&emsp;&emsp;当启动你的Docker容器时，配置它以dnsmasq作为他的解析器\n\n    docker run --dns 169.254.1.1\n\n&emsp;&emsp;由于dnsmasq将传递dns查询到Consul agent，所以容器化应用将能够查询 `.consul`结尾的地址\n\n&emsp;&emsp;Consul API 访问呢？关键是设置两个标准的环境变量： CONSUL_HTTP_ADDR 和 CONSUL_RPC_ADDR。几乎所有标准COnsul客户端库都是用这些值来决定向哪里发送查询。请确认你的代码也使用这些变量--永远不要在你的程序中硬编码Consul地址！\n\n```\nsudo docker run --dns 169.254.1.1 \\\n            -e CONSUL_HTTP_ADDR=169.254.1.1:8500 \\\n            -e CONSUL_RPC_ADDR=169.254.1.1:8400 ...\n```\n\n现在让我们实践一下！\n\n&emsp;&emsp;假设我们有一个叫做`myapp`的已经注册到Consul的服务。我们能够在容器中找到他吗？当然：\n\n```\n$ sudo docker run --dns 169.254.1.1 \\\n                -e CONSUL_HTTP_ADDR=169.254.1.1 \\\n                -e CONSUL_RPC_ADDR=169.254.1.1 \\\n                -it \\\n                myImage:latest /bin/sh\n\n # curl http://$CONSUL_HTTP_ADDR/v1/catalog/service/myapp?pretty\n[\n   {\n      \"ID\": \"6c542e7f-a68d-4de0-bcc0-7eb6b80b68e3\",\n      \"Node\": \"vessel\",\n      \"Address\": \"10.0.0.2\",\n      \"ServiceID\": \"myapp\",\n      \"ServiceName\": \"myapp\",\n      \"ServiceTags\": [],\n      \"ServiceAddress\": \"\",\n      \"ServicePort\": 80,\n      \"ServiceEnableTagOverride\": false,\n      \"CreateIndex\": 60,\n      \"ModifyIndex\": 60\n    }\n]\n# dig +short myapp.service.consul\n10.0.0.2               \n```\n\n&emsp;&emsp;将CONSUL_HTTP_ADDR 和CONSUL_RPC_ADDR设为所有用户shell的默认环境变量是个好主意。你可以简单地通过编辑主机上的 `/etc/environment` 文件，内容如下：\n\n```\n# /etc/environment\nCONSUL_HTTP_ADDR=169.254.1.1:8500\nCONSUL_RPC_ADDR=169.254.1.1:8400\n```\n\n## 注册容器\n\n&emsp;&emsp;现在我们已经演示了容器能够访问Consul agent，你可能想要发布他们的服务到Consul注册中心。\n\n&emsp;&emsp;有很多工具可以实现这个需求。我最喜欢的开源工具是[Registrator](https://github.com/gliderlabs/registrator)，可以在[Docker hub](https://hub.docker.com/r/gliderlabs/registrator/)获取。\n\n&emsp;&emsp;让我们安装Registrator并且使用它发布一个容器。首先：\n\n```\nsudo docker run -d --name=registrator --net=host \\\n            --volume=/var/run/docker.sock:/tmp/docker.sock \\\n            gliderlabes/registrator:latest consul://$CONSUL_HTTP_ADDR\n```\n\n&emsp;&emsp;现在，让我们启动一个简单的运行Nginx的容器:\n\n```\nsudo docker run -d --name=webservice -e CONSUL_HTTP_ADDR=$CONSUL_HTTP_ADDR \\\n                                     -e SERVICE_NAME=webservice \\\n                                     --dns 169.254.1.1 -P nginx:laterst\n```\n\n&emsp;&emsp;Registrator将会检测到服务并发布到Consul。（由于 `nginx` 镜像暴露两个端口，Registrator在注册服务到注册中心时将追加 `-80`和`-443`到服务名 `webservice`，你可以改变这一行为，如果你愿意设置[其他环境变量](http://gliderlabs.com/registrator/latest/user/services/)）\n\n```\n$ sudo docker logs registrator\n2017/02/17 22:50:52 added: cd09c82f01ba vessel:webservice:443\n2017/02/17 22:50:52 added: cd09c82f01ba vessel:webservice:80\n\n$ curl http://$CONSUL_HTTP_ADDR/v1/catalog/service/webservice-80?pretty\n[\n    {\n        \"ID\": \"6c542e7f-a68d-4de0-bcc0-7eb6b80b68e3\",\n        \"Node\": \"vessel\",\n        \"Address\": \"10.0.0.2\",\n        \"ServiceID\": \"vessel:webservice:80\",\n        \"ServiceName\": \"webservice-80\",\n        \"ServiceTags\": [],\n        \"ServiceAddress\": \"\",\n        \"ServicePort\": 32772,\n        \"ServiceEnableTagOverride\": false,\n        \"CreateIndex\": 496,\n        \"ModifyIndex\": 496\n    }\n]\n```\n\n&emsp;&emsp;当容器停止时，Registrator会自动从Consul注册中心移除它。\n\n## 结论\n\n&emsp;&emsp;使用虚拟借口，我们可以避免复杂的配置和困难让Docker主机建立Consul agent。\n\n&emsp;&emsp;使用Registrator，我们可以简单的发布Docker容器到Consul。","source":"_posts/2019-04-01-use-docker-and-consul.md","raw":"---\ntitle: 使用Docker和Consul(译)\ndate: 2019-04-01 14:34:52\ntags: \n- Docker\n- Consul\n- 翻译\n---\n[原文链接](https://medium.com/zendesk-engineering/making-docker-and-consul-get-along-5fceda1d52b9) 可能需要科学上网\n\n&emsp;&emsp;如果你正在管理一个一定规模的互联网技术栈，你很可能听说过[Consul](https://www.consul.io/)。Consul是一个非常棒的解决方案，它能给你的网络提供强大、可靠的服务发现能力。你想要使用它一点也不会让人感到意外。\n\n&emsp;&emsp;让我们假设你已经决定在你的生产环境中使用[Docker](https://www.docker.com/)容器。让我们再假设你打算把容器中的服务发布到Consul的服务注册中心。怎样可靠、轻松的实现这一需求呢？\n\n## 总结\n\n- 直接在你的宿主机上安装Consul和[dnsmasq](http://www.thekelleys.org.uk/dnsmasq/doc.html)，或者把它们安装在使用主机网络(--net=host)的容器里。\n- 在宿主机上创建一个[虚拟网络接口(dummy network interface)](http://www.tldp.org/LDP/nag/node72.html)，并给它分配一个本地IP(例如：169.254.1.1)。\n- 配置Consul，绑定它的HTTP和客户端RPC服务到上述虚拟网络接口的IP地址上。\n- 配置dnsmasq监听虚拟IP地址。\n- 配置你的容器，使用虚拟IP地址作为它们的DNS服务器和Consul服务器。\n- 使用程序如：[Registrator](https://github.com/gliderlabs/registrator)发布你的容器服务。\n<!--more-->\n\n## Consul和容器化应用\n\n&emsp;&emsp;假设你已经决定在你的Docker主机上使用Consul，并且你有以下需求。\n\n- 容器化应用必须能够准确的确定其他应用的地址和端口--不论其他应用是否在同一台主机或者不同的主机。\n- 容器化应用必须能够读写Consul的key-value数据库，并且可靠的执行锁操作\n- 外部主机上的应用必须能够连接这个容器化应用。\n- 健康检查失败的应用必须能够准确的被报告到Consul服务注册中心。\n- 如果一个Docker主机变为不可达，其上的所有应用会被标记为down，并且/或者在Consul服务注册中心取消发布。\n\n## 在你的Docker主机上安装Consul\n\n&emsp;&emsp;在你的网络中的所有主机包括Docker主机上安装、运行Consul Agent 被被认为是一个最佳实践。这有一些很重要的好处：\n&emsp;&emsp;首先，这使得配置服务变得非常简单。运行于宿主机之上的服务(即非容器化的)可以简单的将包含健康检查的服务定义放置到/etc/consul.d/<service_name>.json，Consul Agent 会在启动时或者信号通知时加载它们。然后Consul Agent会将这些服务发不到注册中心并按照你指定的频率执行你设计的健康检查。\n\n&emsp;&emsp;其次，这能够提供可靠的失败监测。如果你的主机因为关机会其他任何原因变得不可达，运行于其他主机上的Consul Agent网络马上会注意到;并且任何注册在这台主机上的服务都会自动被标记为不可用。\n\n&emsp;&emsp;最后，它提供了一个本地节点来接收Consul DNS查询和HTTP API 请求。这些请求可以不必经过网络，这可以简化网络安全策略和减少网络通讯。\n\n&emsp;&emsp;最具争议的问题是：你应该在宿主机还是一个容器里安装Consul Agent?\n\n&emsp;&emsp;答案是：这无所谓-但有所谓的是`网络配置`。Consul本身是一个很小的、自包含的Linux二进制文件；它没有运行时依赖。如果你愿意你当然可以在容器环境中运行它，但是运行环境隔离带来的吸引力由于Consul根本不需要隔离而变得很小。我个人喜欢在宿主机上与其他系统基础服务Docker engine和sshd等服务一样以一等服务来运行Consul。\n\n&emsp;&emsp;当然你也可以选择在容器中运行Consul。Hashicorp 在Docker Hub发布了[官方镜像](https://hub.docker.com/_/consul/)。重要的部分是当你运行容器时，你必须使用 --net=host 选项。\n\n    $ sudo docker run -d --net=host consul:latest\n\n## Consul和回环接口\n\n&emsp;&emsp;当你运行Consul agent时，它监听6个端口来提供不同的功能。以下三个端口是我们重点讨论的：\n\n- HTTP API (默认：8500)：处理来自客户端的HTTP API 请求\n- CLI RPC（默认：8400）：处理来自命令行的请求\n- DNS（默认：8600）：回答DNS查询\n\n&emsp;&emsp;默认情况下，Consul只允许来自回环接口（127.0.0.1）的连接。出于安全考虑，这是一个合理的默认选项，而且在非容器环境下没什么问题。但是对于容器应用来说存在一个难题：容器里边的回环接口和宿主机回环接口是分开的。这是由于在Docker里每个容器都在私有的网络命名空间中运行。所以当一个容器化应用尝试通过地址http://127.0.0.1:8500连接Consul时，它一定会失败。\n\n## 我们考虑过但拒绝的想法\n\n- 配置Consul使之绑定所有接口。这将会使HTTP和CLI RPC 端口项外网开放除非我们配置iptables规则来阻止外部主机的访问。而且我们必须确保服务容器知道它们的宿主机IP地址以便和它的Consul agent通讯。\n- 配置Consul使之绑定Docker网桥IP地址。这个选择能够正常工作但是：(a) 一般网桥接口是Docker动态分配的；(b) 可能存在多个网桥接口；(c) 容器必须清除选择的网桥接口；(d) Consul agent和dnsmasq(下面将描述)在Docker engin启动之前将不会启动。我们不想创建任何不必要的依赖\n- 给每一个容器安装一个Consul agent。Consul的架构体系期待每个主机IP地址一个agent; 并且在大多数环境里，一个Docker主机有一个可访问IP地址。每个容器运行一个Consul agent会造成过个agent加入Consul网络并且声明负责这台主机，引起集群不稳定。\n- 和应用容器分享Consul agent容器的网络。一个容器有且仅有一个网络命名空间。所以如果你的应用程序和Consul agent容器分享网络命名空间，它们之间也将分享网络命名空间。这将剥夺我们使用容器带来的主要好处-网络隔离。\n\n## 虚拟(dummy)接口解决方案\n\n&emsp;&emsp;Linux提供了一个叫做“虚拟接口（dummy interface）”的鲜为人知的网络接口类型。它很像一个回环接口，但是你可以给他分配任何IP，并且你可以创建任意多的虚拟接口（我们只需要一个）。以下是一个例子：\n\n    $ sudo ip link add dummy0 type dummy\n    $ sudo ip link set dev dummy0 up\n    $ ip link show type dummy\n    25: dummy0: <BROADCAST,NOARP> mtu 1500 qdisc noop state DOWN mode DEFAULT qlen 1000\n        link/ether 2a:bb:3e:f6:50:1c brd ff:ff:ff:ff:ff:ff\n\n&emsp;&emsp;我们该为接口分配什么IP?169.254.1.1是一个不错的选择。169.254.0.0/16网段内的地址是本地连接保留地址，这意味着无论在你的本地网络或者互联网上它们都是不可路由的，并且它们对于分配者来说完全是私有的。（一个例外：亚马逊 EC2使用了一个169.254.169.254地址来获取示例元数据，但是我们的操作不会影响这一功能）\n\n    $ sudo ip addr add 169.254.1.1/32 dev dummy0 \n    $ sudo ip link set dev dummy0 up\n    $ ip addr show dev dummy0\n    25: dummy0: <BROADCAST,NOARP,UP,LOWER_UP> mtu 1500 qdisc noqueue state UNKNOWN qlen 1000\n        link/ether 2a:bb:3e:f6:50:1c brd ff:ff:ff:ff:ff:ff\n        inet 169.254.1.1/32 scope global dummy0\n        valid_lft forever preferred_lft forever\n        inet6 fe80::28bb:3eff:fef6:501c/64 scope link \n        valid_lft forever preferred_lft forever\n    \n&emsp;&emsp;每个主机可以使用相同的虚拟接口地址169.254.1.1。这样会大大简化配置，因为你不必为应用程序写脚本来为它确定、提供它需要得IP地址。\n\n## 配置接口\n\n&emsp;&emsp;如果你的linux发行版使用systemd,可以很方便的通过创建两个文件来达到启动时配置虚拟接口。（你可能需要通过你的发行版包管理器来安装systemd-networkd，启用并启动它）\n\n&emsp;&emsp;把下面的内容写到文件`/etc/systemd/network/dummy0.netdev`里:\n\n    [NetDev]\n    Name=dummy0\n    Kind=dummy\n\n&emsp;&emsp;然后把下面的内容写到文件`/etc/systemd/network/dummy0.network`里\n    \n    [Match]\n    Name=dummy0\n\n    [Network]\n    Address=169.254.1.1/32\n\n&emsp;&emsp;运行命令`sudo systemctl restart systemd-networkd`后，dummy0接口应该生成了。\n\n&emsp;&emsp;如果你没有使用`systemd`，查看你的linux发行版文档来学习如何在你的主机创建一个虚拟接口。\n\n## 配置Consul来使用上面的虚拟接口\n\n&emsp;&emsp;接下来让我们配置Consul agent，使它绑定它的HTTP、CLI RPC，和DNS接口到地址169.254.1.1.\n\n&emsp;&emsp;假设angent使用`-config-dir=/etc/consul.d`选项启动。我们可以简单的创建一个文件`/etc/consul.d/interfaces.json`，内容如下，用你的主机IP地址替换`HOST_IP_ADDRESS`变量。\n\n```\n{\n  \"client_addr\": \"169.254.1.1\",\n  \"bind_addr\": \"HOST_IP_ADDRESS\"\n}\n```\n\n&emsp;&emsp;做完之后你需要重启Consul agent。\n\n## 配置dnsmasq使用虚拟接口\n\n&emsp;&emsp;dnsmasq是一个非常棒的软件。它可以在你的主机上扮演本地DNS缓存。它极其的可靠并且可以很容易和Consul的DNS服务集成。我们将在我们的服务器上安装它；绑定它到我们的回环接口和虚拟接口；使他传递请求到Consul agent的 `.consul`；在主机和容器上配置`/etc/resolv.conf`来分发DNS请求到它。\n\n&emsp;&emsp;首先，使用你的系统包管理工具（`yum`， `apt-get`等）来安装dnsmasq\n\n&emsp;&emsp;接下来，配置dnsmasq绑定到回环接口和虚拟接口，并且向前传递Consul查询到agent.创建一个文件 `/etc/dnsmasq.d/consul.conf`，内容如下\n\n```\nserver=/consul/169.254.1.1#8600\nlisten-address=127.0.0.1\nlisten-address=169.254.1.1\n```\n然后重启dnsmasq.\n\n## 组合起来：容器、Consul、DNS\n\n&emsp;&emsp;现在让一切正常运行的关键是确保这些容器和容器内运行的的代码在解析DNS查询的时候指向正确的地址或连接到Consul的HTTP API\n\n&emsp;&emsp;当启动你的Docker容器时，配置它以dnsmasq作为他的解析器\n\n    docker run --dns 169.254.1.1\n\n&emsp;&emsp;由于dnsmasq将传递dns查询到Consul agent，所以容器化应用将能够查询 `.consul`结尾的地址\n\n&emsp;&emsp;Consul API 访问呢？关键是设置两个标准的环境变量： CONSUL_HTTP_ADDR 和 CONSUL_RPC_ADDR。几乎所有标准COnsul客户端库都是用这些值来决定向哪里发送查询。请确认你的代码也使用这些变量--永远不要在你的程序中硬编码Consul地址！\n\n```\nsudo docker run --dns 169.254.1.1 \\\n            -e CONSUL_HTTP_ADDR=169.254.1.1:8500 \\\n            -e CONSUL_RPC_ADDR=169.254.1.1:8400 ...\n```\n\n现在让我们实践一下！\n\n&emsp;&emsp;假设我们有一个叫做`myapp`的已经注册到Consul的服务。我们能够在容器中找到他吗？当然：\n\n```\n$ sudo docker run --dns 169.254.1.1 \\\n                -e CONSUL_HTTP_ADDR=169.254.1.1 \\\n                -e CONSUL_RPC_ADDR=169.254.1.1 \\\n                -it \\\n                myImage:latest /bin/sh\n\n # curl http://$CONSUL_HTTP_ADDR/v1/catalog/service/myapp?pretty\n[\n   {\n      \"ID\": \"6c542e7f-a68d-4de0-bcc0-7eb6b80b68e3\",\n      \"Node\": \"vessel\",\n      \"Address\": \"10.0.0.2\",\n      \"ServiceID\": \"myapp\",\n      \"ServiceName\": \"myapp\",\n      \"ServiceTags\": [],\n      \"ServiceAddress\": \"\",\n      \"ServicePort\": 80,\n      \"ServiceEnableTagOverride\": false,\n      \"CreateIndex\": 60,\n      \"ModifyIndex\": 60\n    }\n]\n# dig +short myapp.service.consul\n10.0.0.2               \n```\n\n&emsp;&emsp;将CONSUL_HTTP_ADDR 和CONSUL_RPC_ADDR设为所有用户shell的默认环境变量是个好主意。你可以简单地通过编辑主机上的 `/etc/environment` 文件，内容如下：\n\n```\n# /etc/environment\nCONSUL_HTTP_ADDR=169.254.1.1:8500\nCONSUL_RPC_ADDR=169.254.1.1:8400\n```\n\n## 注册容器\n\n&emsp;&emsp;现在我们已经演示了容器能够访问Consul agent，你可能想要发布他们的服务到Consul注册中心。\n\n&emsp;&emsp;有很多工具可以实现这个需求。我最喜欢的开源工具是[Registrator](https://github.com/gliderlabs/registrator)，可以在[Docker hub](https://hub.docker.com/r/gliderlabs/registrator/)获取。\n\n&emsp;&emsp;让我们安装Registrator并且使用它发布一个容器。首先：\n\n```\nsudo docker run -d --name=registrator --net=host \\\n            --volume=/var/run/docker.sock:/tmp/docker.sock \\\n            gliderlabes/registrator:latest consul://$CONSUL_HTTP_ADDR\n```\n\n&emsp;&emsp;现在，让我们启动一个简单的运行Nginx的容器:\n\n```\nsudo docker run -d --name=webservice -e CONSUL_HTTP_ADDR=$CONSUL_HTTP_ADDR \\\n                                     -e SERVICE_NAME=webservice \\\n                                     --dns 169.254.1.1 -P nginx:laterst\n```\n\n&emsp;&emsp;Registrator将会检测到服务并发布到Consul。（由于 `nginx` 镜像暴露两个端口，Registrator在注册服务到注册中心时将追加 `-80`和`-443`到服务名 `webservice`，你可以改变这一行为，如果你愿意设置[其他环境变量](http://gliderlabs.com/registrator/latest/user/services/)）\n\n```\n$ sudo docker logs registrator\n2017/02/17 22:50:52 added: cd09c82f01ba vessel:webservice:443\n2017/02/17 22:50:52 added: cd09c82f01ba vessel:webservice:80\n\n$ curl http://$CONSUL_HTTP_ADDR/v1/catalog/service/webservice-80?pretty\n[\n    {\n        \"ID\": \"6c542e7f-a68d-4de0-bcc0-7eb6b80b68e3\",\n        \"Node\": \"vessel\",\n        \"Address\": \"10.0.0.2\",\n        \"ServiceID\": \"vessel:webservice:80\",\n        \"ServiceName\": \"webservice-80\",\n        \"ServiceTags\": [],\n        \"ServiceAddress\": \"\",\n        \"ServicePort\": 32772,\n        \"ServiceEnableTagOverride\": false,\n        \"CreateIndex\": 496,\n        \"ModifyIndex\": 496\n    }\n]\n```\n\n&emsp;&emsp;当容器停止时，Registrator会自动从Consul注册中心移除它。\n\n## 结论\n\n&emsp;&emsp;使用虚拟借口，我们可以避免复杂的配置和困难让Docker主机建立Consul agent。\n\n&emsp;&emsp;使用Registrator，我们可以简单的发布Docker容器到Consul。","slug":"2019-04-01-use-docker-and-consul","published":1,"updated":"2019-04-04T02:19:42.468Z","_id":"cju21dgny0008fazleusirp07","comments":1,"layout":"post","photos":[],"link":"","content":"<p><a href=\"https://medium.com/zendesk-engineering/making-docker-and-consul-get-along-5fceda1d52b9\" target=\"_blank\" rel=\"noopener\">原文链接</a> 可能需要科学上网</p>\n<p>&emsp;&emsp;如果你正在管理一个一定规模的互联网技术栈，你很可能听说过<a href=\"https://www.consul.io/\" target=\"_blank\" rel=\"noopener\">Consul</a>。Consul是一个非常棒的解决方案，它能给你的网络提供强大、可靠的服务发现能力。你想要使用它一点也不会让人感到意外。</p>\n<p>&emsp;&emsp;让我们假设你已经决定在你的生产环境中使用<a href=\"https://www.docker.com/\" target=\"_blank\" rel=\"noopener\">Docker</a>容器。让我们再假设你打算把容器中的服务发布到Consul的服务注册中心。怎样可靠、轻松的实现这一需求呢？</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ul>\n<li>直接在你的宿主机上安装Consul和<a href=\"http://www.thekelleys.org.uk/dnsmasq/doc.html\" target=\"_blank\" rel=\"noopener\">dnsmasq</a>，或者把它们安装在使用主机网络(–net=host)的容器里。</li>\n<li>在宿主机上创建一个<a href=\"http://www.tldp.org/LDP/nag/node72.html\" target=\"_blank\" rel=\"noopener\">虚拟网络接口(dummy network interface)</a>，并给它分配一个本地IP(例如：169.254.1.1)。</li>\n<li>配置Consul，绑定它的HTTP和客户端RPC服务到上述虚拟网络接口的IP地址上。</li>\n<li>配置dnsmasq监听虚拟IP地址。</li>\n<li>配置你的容器，使用虚拟IP地址作为它们的DNS服务器和Consul服务器。</li>\n<li>使用程序如：<a href=\"https://github.com/gliderlabs/registrator\" target=\"_blank\" rel=\"noopener\">Registrator</a>发布你的容器服务。<a id=\"more\"></a>\n</li>\n</ul>\n<h2 id=\"Consul和容器化应用\"><a href=\"#Consul和容器化应用\" class=\"headerlink\" title=\"Consul和容器化应用\"></a>Consul和容器化应用</h2><p>&emsp;&emsp;假设你已经决定在你的Docker主机上使用Consul，并且你有以下需求。</p>\n<ul>\n<li>容器化应用必须能够准确的确定其他应用的地址和端口–不论其他应用是否在同一台主机或者不同的主机。</li>\n<li>容器化应用必须能够读写Consul的key-value数据库，并且可靠的执行锁操作</li>\n<li>外部主机上的应用必须能够连接这个容器化应用。</li>\n<li>健康检查失败的应用必须能够准确的被报告到Consul服务注册中心。</li>\n<li>如果一个Docker主机变为不可达，其上的所有应用会被标记为down，并且/或者在Consul服务注册中心取消发布。</li>\n</ul>\n<h2 id=\"在你的Docker主机上安装Consul\"><a href=\"#在你的Docker主机上安装Consul\" class=\"headerlink\" title=\"在你的Docker主机上安装Consul\"></a>在你的Docker主机上安装Consul</h2><p>&emsp;&emsp;在你的网络中的所有主机包括Docker主机上安装、运行Consul Agent 被被认为是一个最佳实践。这有一些很重要的好处：<br>&emsp;&emsp;首先，这使得配置服务变得非常简单。运行于宿主机之上的服务(即非容器化的)可以简单的将包含健康检查的服务定义放置到/etc/consul.d/&lt;service_name&gt;.json，Consul Agent 会在启动时或者信号通知时加载它们。然后Consul Agent会将这些服务发不到注册中心并按照你指定的频率执行你设计的健康检查。</p>\n<p>&emsp;&emsp;其次，这能够提供可靠的失败监测。如果你的主机因为关机会其他任何原因变得不可达，运行于其他主机上的Consul Agent网络马上会注意到;并且任何注册在这台主机上的服务都会自动被标记为不可用。</p>\n<p>&emsp;&emsp;最后，它提供了一个本地节点来接收Consul DNS查询和HTTP API 请求。这些请求可以不必经过网络，这可以简化网络安全策略和减少网络通讯。</p>\n<p>&emsp;&emsp;最具争议的问题是：你应该在宿主机还是一个容器里安装Consul Agent?</p>\n<p>&emsp;&emsp;答案是：这无所谓-但有所谓的是<code>网络配置</code>。Consul本身是一个很小的、自包含的Linux二进制文件；它没有运行时依赖。如果你愿意你当然可以在容器环境中运行它，但是运行环境隔离带来的吸引力由于Consul根本不需要隔离而变得很小。我个人喜欢在宿主机上与其他系统基础服务Docker engine和sshd等服务一样以一等服务来运行Consul。</p>\n<p>&emsp;&emsp;当然你也可以选择在容器中运行Consul。Hashicorp 在Docker Hub发布了<a href=\"https://hub.docker.com/_/consul/\" target=\"_blank\" rel=\"noopener\">官方镜像</a>。重要的部分是当你运行容器时，你必须使用 –net=host 选项。</p>\n<pre><code>$ sudo docker run -d --net=host consul:latest\n</code></pre><h2 id=\"Consul和回环接口\"><a href=\"#Consul和回环接口\" class=\"headerlink\" title=\"Consul和回环接口\"></a>Consul和回环接口</h2><p>&emsp;&emsp;当你运行Consul agent时，它监听6个端口来提供不同的功能。以下三个端口是我们重点讨论的：</p>\n<ul>\n<li>HTTP API (默认：8500)：处理来自客户端的HTTP API 请求</li>\n<li>CLI RPC（默认：8400）：处理来自命令行的请求</li>\n<li>DNS（默认：8600）：回答DNS查询</li>\n</ul>\n<p>&emsp;&emsp;默认情况下，Consul只允许来自回环接口（127.0.0.1）的连接。出于安全考虑，这是一个合理的默认选项，而且在非容器环境下没什么问题。但是对于容器应用来说存在一个难题：容器里边的回环接口和宿主机回环接口是分开的。这是由于在Docker里每个容器都在私有的网络命名空间中运行。所以当一个容器化应用尝试通过地址<a href=\"http://127.0.0.1:8500连接Consul时，它一定会失败。\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8500连接Consul时，它一定会失败。</a></p>\n<h2 id=\"我们考虑过但拒绝的想法\"><a href=\"#我们考虑过但拒绝的想法\" class=\"headerlink\" title=\"我们考虑过但拒绝的想法\"></a>我们考虑过但拒绝的想法</h2><ul>\n<li>配置Consul使之绑定所有接口。这将会使HTTP和CLI RPC 端口项外网开放除非我们配置iptables规则来阻止外部主机的访问。而且我们必须确保服务容器知道它们的宿主机IP地址以便和它的Consul agent通讯。</li>\n<li>配置Consul使之绑定Docker网桥IP地址。这个选择能够正常工作但是：(a) 一般网桥接口是Docker动态分配的；(b) 可能存在多个网桥接口；(c) 容器必须清除选择的网桥接口；(d) Consul agent和dnsmasq(下面将描述)在Docker engin启动之前将不会启动。我们不想创建任何不必要的依赖</li>\n<li>给每一个容器安装一个Consul agent。Consul的架构体系期待每个主机IP地址一个agent; 并且在大多数环境里，一个Docker主机有一个可访问IP地址。每个容器运行一个Consul agent会造成过个agent加入Consul网络并且声明负责这台主机，引起集群不稳定。</li>\n<li>和应用容器分享Consul agent容器的网络。一个容器有且仅有一个网络命名空间。所以如果你的应用程序和Consul agent容器分享网络命名空间，它们之间也将分享网络命名空间。这将剥夺我们使用容器带来的主要好处-网络隔离。</li>\n</ul>\n<h2 id=\"虚拟-dummy-接口解决方案\"><a href=\"#虚拟-dummy-接口解决方案\" class=\"headerlink\" title=\"虚拟(dummy)接口解决方案\"></a>虚拟(dummy)接口解决方案</h2><p>&emsp;&emsp;Linux提供了一个叫做“虚拟接口（dummy interface）”的鲜为人知的网络接口类型。它很像一个回环接口，但是你可以给他分配任何IP，并且你可以创建任意多的虚拟接口（我们只需要一个）。以下是一个例子：</p>\n<pre><code>$ sudo ip link add dummy0 type dummy\n$ sudo ip link set dev dummy0 up\n$ ip link show type dummy\n25: dummy0: &lt;BROADCAST,NOARP&gt; mtu 1500 qdisc noop state DOWN mode DEFAULT qlen 1000\n    link/ether 2a:bb:3e:f6:50:1c brd ff:ff:ff:ff:ff:ff\n</code></pre><p>&emsp;&emsp;我们该为接口分配什么IP?169.254.1.1是一个不错的选择。169.254.0.0/16网段内的地址是本地连接保留地址，这意味着无论在你的本地网络或者互联网上它们都是不可路由的，并且它们对于分配者来说完全是私有的。（一个例外：亚马逊 EC2使用了一个169.254.169.254地址来获取示例元数据，但是我们的操作不会影响这一功能）</p>\n<pre><code>$ sudo ip addr add 169.254.1.1/32 dev dummy0 \n$ sudo ip link set dev dummy0 up\n$ ip addr show dev dummy0\n25: dummy0: &lt;BROADCAST,NOARP,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UNKNOWN qlen 1000\n    link/ether 2a:bb:3e:f6:50:1c brd ff:ff:ff:ff:ff:ff\n    inet 169.254.1.1/32 scope global dummy0\n    valid_lft forever preferred_lft forever\n    inet6 fe80::28bb:3eff:fef6:501c/64 scope link \n    valid_lft forever preferred_lft forever\n</code></pre><p>&emsp;&emsp;每个主机可以使用相同的虚拟接口地址169.254.1.1。这样会大大简化配置，因为你不必为应用程序写脚本来为它确定、提供它需要得IP地址。</p>\n<h2 id=\"配置接口\"><a href=\"#配置接口\" class=\"headerlink\" title=\"配置接口\"></a>配置接口</h2><p>&emsp;&emsp;如果你的linux发行版使用systemd,可以很方便的通过创建两个文件来达到启动时配置虚拟接口。（你可能需要通过你的发行版包管理器来安装systemd-networkd，启用并启动它）</p>\n<p>&emsp;&emsp;把下面的内容写到文件<code>/etc/systemd/network/dummy0.netdev</code>里:</p>\n<pre><code>[NetDev]\nName=dummy0\nKind=dummy\n</code></pre><p>&emsp;&emsp;然后把下面的内容写到文件<code>/etc/systemd/network/dummy0.network</code>里</p>\n<pre><code>[Match]\nName=dummy0\n\n[Network]\nAddress=169.254.1.1/32\n</code></pre><p>&emsp;&emsp;运行命令<code>sudo systemctl restart systemd-networkd</code>后，dummy0接口应该生成了。</p>\n<p>&emsp;&emsp;如果你没有使用<code>systemd</code>，查看你的linux发行版文档来学习如何在你的主机创建一个虚拟接口。</p>\n<h2 id=\"配置Consul来使用上面的虚拟接口\"><a href=\"#配置Consul来使用上面的虚拟接口\" class=\"headerlink\" title=\"配置Consul来使用上面的虚拟接口\"></a>配置Consul来使用上面的虚拟接口</h2><p>&emsp;&emsp;接下来让我们配置Consul agent，使它绑定它的HTTP、CLI RPC，和DNS接口到地址169.254.1.1.</p>\n<p>&emsp;&emsp;假设angent使用<code>-config-dir=/etc/consul.d</code>选项启动。我们可以简单的创建一个文件<code>/etc/consul.d/interfaces.json</code>，内容如下，用你的主机IP地址替换<code>HOST_IP_ADDRESS</code>变量。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;client_addr&quot;: &quot;169.254.1.1&quot;,</span><br><span class=\"line\">  &quot;bind_addr&quot;: &quot;HOST_IP_ADDRESS&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;做完之后你需要重启Consul agent。</p>\n<h2 id=\"配置dnsmasq使用虚拟接口\"><a href=\"#配置dnsmasq使用虚拟接口\" class=\"headerlink\" title=\"配置dnsmasq使用虚拟接口\"></a>配置dnsmasq使用虚拟接口</h2><p>&emsp;&emsp;dnsmasq是一个非常棒的软件。它可以在你的主机上扮演本地DNS缓存。它极其的可靠并且可以很容易和Consul的DNS服务集成。我们将在我们的服务器上安装它；绑定它到我们的回环接口和虚拟接口；使他传递请求到Consul agent的 <code>.consul</code>；在主机和容器上配置<code>/etc/resolv.conf</code>来分发DNS请求到它。</p>\n<p>&emsp;&emsp;首先，使用你的系统包管理工具（<code>yum</code>， <code>apt-get</code>等）来安装dnsmasq</p>\n<p>&emsp;&emsp;接下来，配置dnsmasq绑定到回环接口和虚拟接口，并且向前传递Consul查询到agent.创建一个文件 <code>/etc/dnsmasq.d/consul.conf</code>，内容如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server=/consul/169.254.1.1#8600</span><br><span class=\"line\">listen-address=127.0.0.1</span><br><span class=\"line\">listen-address=169.254.1.1</span><br></pre></td></tr></table></figure>\n<p>然后重启dnsmasq.</p>\n<h2 id=\"组合起来：容器、Consul、DNS\"><a href=\"#组合起来：容器、Consul、DNS\" class=\"headerlink\" title=\"组合起来：容器、Consul、DNS\"></a>组合起来：容器、Consul、DNS</h2><p>&emsp;&emsp;现在让一切正常运行的关键是确保这些容器和容器内运行的的代码在解析DNS查询的时候指向正确的地址或连接到Consul的HTTP API</p>\n<p>&emsp;&emsp;当启动你的Docker容器时，配置它以dnsmasq作为他的解析器</p>\n<pre><code>docker run --dns 169.254.1.1\n</code></pre><p>&emsp;&emsp;由于dnsmasq将传递dns查询到Consul agent，所以容器化应用将能够查询 <code>.consul</code>结尾的地址</p>\n<p>&emsp;&emsp;Consul API 访问呢？关键是设置两个标准的环境变量： CONSUL_HTTP_ADDR 和 CONSUL_RPC_ADDR。几乎所有标准COnsul客户端库都是用这些值来决定向哪里发送查询。请确认你的代码也使用这些变量–永远不要在你的程序中硬编码Consul地址！</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run --dns 169.254.1.1 \\</span><br><span class=\"line\">            -e CONSUL_HTTP_ADDR=169.254.1.1:8500 \\</span><br><span class=\"line\">            -e CONSUL_RPC_ADDR=169.254.1.1:8400 ...</span><br></pre></td></tr></table></figure>\n<p>现在让我们实践一下！</p>\n<p>&emsp;&emsp;假设我们有一个叫做<code>myapp</code>的已经注册到Consul的服务。我们能够在容器中找到他吗？当然：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo docker run --dns 169.254.1.1 \\</span><br><span class=\"line\">                -e CONSUL_HTTP_ADDR=169.254.1.1 \\</span><br><span class=\"line\">                -e CONSUL_RPC_ADDR=169.254.1.1 \\</span><br><span class=\"line\">                -it \\</span><br><span class=\"line\">                myImage:latest /bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\"> # curl http://$CONSUL_HTTP_ADDR/v1/catalog/service/myapp?pretty</span><br><span class=\"line\">[</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">      &quot;ID&quot;: &quot;6c542e7f-a68d-4de0-bcc0-7eb6b80b68e3&quot;,</span><br><span class=\"line\">      &quot;Node&quot;: &quot;vessel&quot;,</span><br><span class=\"line\">      &quot;Address&quot;: &quot;10.0.0.2&quot;,</span><br><span class=\"line\">      &quot;ServiceID&quot;: &quot;myapp&quot;,</span><br><span class=\"line\">      &quot;ServiceName&quot;: &quot;myapp&quot;,</span><br><span class=\"line\">      &quot;ServiceTags&quot;: [],</span><br><span class=\"line\">      &quot;ServiceAddress&quot;: &quot;&quot;,</span><br><span class=\"line\">      &quot;ServicePort&quot;: 80,</span><br><span class=\"line\">      &quot;ServiceEnableTagOverride&quot;: false,</span><br><span class=\"line\">      &quot;CreateIndex&quot;: 60,</span><br><span class=\"line\">      &quot;ModifyIndex&quot;: 60</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"># dig +short myapp.service.consul</span><br><span class=\"line\">10.0.0.2</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;将CONSUL_HTTP_ADDR 和CONSUL_RPC_ADDR设为所有用户shell的默认环境变量是个好主意。你可以简单地通过编辑主机上的 <code>/etc/environment</code> 文件，内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># /etc/environment</span><br><span class=\"line\">CONSUL_HTTP_ADDR=169.254.1.1:8500</span><br><span class=\"line\">CONSUL_RPC_ADDR=169.254.1.1:8400</span><br></pre></td></tr></table></figure>\n<h2 id=\"注册容器\"><a href=\"#注册容器\" class=\"headerlink\" title=\"注册容器\"></a>注册容器</h2><p>&emsp;&emsp;现在我们已经演示了容器能够访问Consul agent，你可能想要发布他们的服务到Consul注册中心。</p>\n<p>&emsp;&emsp;有很多工具可以实现这个需求。我最喜欢的开源工具是<a href=\"https://github.com/gliderlabs/registrator\" target=\"_blank\" rel=\"noopener\">Registrator</a>，可以在<a href=\"https://hub.docker.com/r/gliderlabs/registrator/\" target=\"_blank\" rel=\"noopener\">Docker hub</a>获取。</p>\n<p>&emsp;&emsp;让我们安装Registrator并且使用它发布一个容器。首先：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d --name=registrator --net=host \\</span><br><span class=\"line\">            --volume=/var/run/docker.sock:/tmp/docker.sock \\</span><br><span class=\"line\">            gliderlabes/registrator:latest consul://$CONSUL_HTTP_ADDR</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;现在，让我们启动一个简单的运行Nginx的容器:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d --name=webservice -e CONSUL_HTTP_ADDR=$CONSUL_HTTP_ADDR \\</span><br><span class=\"line\">                                     -e SERVICE_NAME=webservice \\</span><br><span class=\"line\">                                     --dns 169.254.1.1 -P nginx:laterst</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;Registrator将会检测到服务并发布到Consul。（由于 <code>nginx</code> 镜像暴露两个端口，Registrator在注册服务到注册中心时将追加 <code>-80</code>和<code>-443</code>到服务名 <code>webservice</code>，你可以改变这一行为，如果你愿意设置<a href=\"http://gliderlabs.com/registrator/latest/user/services/\" target=\"_blank\" rel=\"noopener\">其他环境变量</a>）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo docker logs registrator</span><br><span class=\"line\">2017/02/17 22:50:52 added: cd09c82f01ba vessel:webservice:443</span><br><span class=\"line\">2017/02/17 22:50:52 added: cd09c82f01ba vessel:webservice:80</span><br><span class=\"line\"></span><br><span class=\"line\">$ curl http://$CONSUL_HTTP_ADDR/v1/catalog/service/webservice-80?pretty</span><br><span class=\"line\">[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;ID&quot;: &quot;6c542e7f-a68d-4de0-bcc0-7eb6b80b68e3&quot;,</span><br><span class=\"line\">        &quot;Node&quot;: &quot;vessel&quot;,</span><br><span class=\"line\">        &quot;Address&quot;: &quot;10.0.0.2&quot;,</span><br><span class=\"line\">        &quot;ServiceID&quot;: &quot;vessel:webservice:80&quot;,</span><br><span class=\"line\">        &quot;ServiceName&quot;: &quot;webservice-80&quot;,</span><br><span class=\"line\">        &quot;ServiceTags&quot;: [],</span><br><span class=\"line\">        &quot;ServiceAddress&quot;: &quot;&quot;,</span><br><span class=\"line\">        &quot;ServicePort&quot;: 32772,</span><br><span class=\"line\">        &quot;ServiceEnableTagOverride&quot;: false,</span><br><span class=\"line\">        &quot;CreateIndex&quot;: 496,</span><br><span class=\"line\">        &quot;ModifyIndex&quot;: 496</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;当容器停止时，Registrator会自动从Consul注册中心移除它。</p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>&emsp;&emsp;使用虚拟借口，我们可以避免复杂的配置和困难让Docker主机建立Consul agent。</p>\n<p>&emsp;&emsp;使用Registrator，我们可以简单的发布Docker容器到Consul。</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://medium.com/zendesk-engineering/making-docker-and-consul-get-along-5fceda1d52b9\" target=\"_blank\" rel=\"noopener\">原文链接</a> 可能需要科学上网</p>\n<p>&emsp;&emsp;如果你正在管理一个一定规模的互联网技术栈，你很可能听说过<a href=\"https://www.consul.io/\" target=\"_blank\" rel=\"noopener\">Consul</a>。Consul是一个非常棒的解决方案，它能给你的网络提供强大、可靠的服务发现能力。你想要使用它一点也不会让人感到意外。</p>\n<p>&emsp;&emsp;让我们假设你已经决定在你的生产环境中使用<a href=\"https://www.docker.com/\" target=\"_blank\" rel=\"noopener\">Docker</a>容器。让我们再假设你打算把容器中的服务发布到Consul的服务注册中心。怎样可靠、轻松的实现这一需求呢？</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ul>\n<li>直接在你的宿主机上安装Consul和<a href=\"http://www.thekelleys.org.uk/dnsmasq/doc.html\" target=\"_blank\" rel=\"noopener\">dnsmasq</a>，或者把它们安装在使用主机网络(–net=host)的容器里。</li>\n<li>在宿主机上创建一个<a href=\"http://www.tldp.org/LDP/nag/node72.html\" target=\"_blank\" rel=\"noopener\">虚拟网络接口(dummy network interface)</a>，并给它分配一个本地IP(例如：169.254.1.1)。</li>\n<li>配置Consul，绑定它的HTTP和客户端RPC服务到上述虚拟网络接口的IP地址上。</li>\n<li>配置dnsmasq监听虚拟IP地址。</li>\n<li>配置你的容器，使用虚拟IP地址作为它们的DNS服务器和Consul服务器。</li>\n<li>使用程序如：<a href=\"https://github.com/gliderlabs/registrator\" target=\"_blank\" rel=\"noopener\">Registrator</a>发布你的容器服务。","more":"</li>\n</ul>\n<h2 id=\"Consul和容器化应用\"><a href=\"#Consul和容器化应用\" class=\"headerlink\" title=\"Consul和容器化应用\"></a>Consul和容器化应用</h2><p>&emsp;&emsp;假设你已经决定在你的Docker主机上使用Consul，并且你有以下需求。</p>\n<ul>\n<li>容器化应用必须能够准确的确定其他应用的地址和端口–不论其他应用是否在同一台主机或者不同的主机。</li>\n<li>容器化应用必须能够读写Consul的key-value数据库，并且可靠的执行锁操作</li>\n<li>外部主机上的应用必须能够连接这个容器化应用。</li>\n<li>健康检查失败的应用必须能够准确的被报告到Consul服务注册中心。</li>\n<li>如果一个Docker主机变为不可达，其上的所有应用会被标记为down，并且/或者在Consul服务注册中心取消发布。</li>\n</ul>\n<h2 id=\"在你的Docker主机上安装Consul\"><a href=\"#在你的Docker主机上安装Consul\" class=\"headerlink\" title=\"在你的Docker主机上安装Consul\"></a>在你的Docker主机上安装Consul</h2><p>&emsp;&emsp;在你的网络中的所有主机包括Docker主机上安装、运行Consul Agent 被被认为是一个最佳实践。这有一些很重要的好处：<br>&emsp;&emsp;首先，这使得配置服务变得非常简单。运行于宿主机之上的服务(即非容器化的)可以简单的将包含健康检查的服务定义放置到/etc/consul.d/&lt;service_name&gt;.json，Consul Agent 会在启动时或者信号通知时加载它们。然后Consul Agent会将这些服务发不到注册中心并按照你指定的频率执行你设计的健康检查。</p>\n<p>&emsp;&emsp;其次，这能够提供可靠的失败监测。如果你的主机因为关机会其他任何原因变得不可达，运行于其他主机上的Consul Agent网络马上会注意到;并且任何注册在这台主机上的服务都会自动被标记为不可用。</p>\n<p>&emsp;&emsp;最后，它提供了一个本地节点来接收Consul DNS查询和HTTP API 请求。这些请求可以不必经过网络，这可以简化网络安全策略和减少网络通讯。</p>\n<p>&emsp;&emsp;最具争议的问题是：你应该在宿主机还是一个容器里安装Consul Agent?</p>\n<p>&emsp;&emsp;答案是：这无所谓-但有所谓的是<code>网络配置</code>。Consul本身是一个很小的、自包含的Linux二进制文件；它没有运行时依赖。如果你愿意你当然可以在容器环境中运行它，但是运行环境隔离带来的吸引力由于Consul根本不需要隔离而变得很小。我个人喜欢在宿主机上与其他系统基础服务Docker engine和sshd等服务一样以一等服务来运行Consul。</p>\n<p>&emsp;&emsp;当然你也可以选择在容器中运行Consul。Hashicorp 在Docker Hub发布了<a href=\"https://hub.docker.com/_/consul/\" target=\"_blank\" rel=\"noopener\">官方镜像</a>。重要的部分是当你运行容器时，你必须使用 –net=host 选项。</p>\n<pre><code>$ sudo docker run -d --net=host consul:latest\n</code></pre><h2 id=\"Consul和回环接口\"><a href=\"#Consul和回环接口\" class=\"headerlink\" title=\"Consul和回环接口\"></a>Consul和回环接口</h2><p>&emsp;&emsp;当你运行Consul agent时，它监听6个端口来提供不同的功能。以下三个端口是我们重点讨论的：</p>\n<ul>\n<li>HTTP API (默认：8500)：处理来自客户端的HTTP API 请求</li>\n<li>CLI RPC（默认：8400）：处理来自命令行的请求</li>\n<li>DNS（默认：8600）：回答DNS查询</li>\n</ul>\n<p>&emsp;&emsp;默认情况下，Consul只允许来自回环接口（127.0.0.1）的连接。出于安全考虑，这是一个合理的默认选项，而且在非容器环境下没什么问题。但是对于容器应用来说存在一个难题：容器里边的回环接口和宿主机回环接口是分开的。这是由于在Docker里每个容器都在私有的网络命名空间中运行。所以当一个容器化应用尝试通过地址<a href=\"http://127.0.0.1:8500连接Consul时，它一定会失败。\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8500连接Consul时，它一定会失败。</a></p>\n<h2 id=\"我们考虑过但拒绝的想法\"><a href=\"#我们考虑过但拒绝的想法\" class=\"headerlink\" title=\"我们考虑过但拒绝的想法\"></a>我们考虑过但拒绝的想法</h2><ul>\n<li>配置Consul使之绑定所有接口。这将会使HTTP和CLI RPC 端口项外网开放除非我们配置iptables规则来阻止外部主机的访问。而且我们必须确保服务容器知道它们的宿主机IP地址以便和它的Consul agent通讯。</li>\n<li>配置Consul使之绑定Docker网桥IP地址。这个选择能够正常工作但是：(a) 一般网桥接口是Docker动态分配的；(b) 可能存在多个网桥接口；(c) 容器必须清除选择的网桥接口；(d) Consul agent和dnsmasq(下面将描述)在Docker engin启动之前将不会启动。我们不想创建任何不必要的依赖</li>\n<li>给每一个容器安装一个Consul agent。Consul的架构体系期待每个主机IP地址一个agent; 并且在大多数环境里，一个Docker主机有一个可访问IP地址。每个容器运行一个Consul agent会造成过个agent加入Consul网络并且声明负责这台主机，引起集群不稳定。</li>\n<li>和应用容器分享Consul agent容器的网络。一个容器有且仅有一个网络命名空间。所以如果你的应用程序和Consul agent容器分享网络命名空间，它们之间也将分享网络命名空间。这将剥夺我们使用容器带来的主要好处-网络隔离。</li>\n</ul>\n<h2 id=\"虚拟-dummy-接口解决方案\"><a href=\"#虚拟-dummy-接口解决方案\" class=\"headerlink\" title=\"虚拟(dummy)接口解决方案\"></a>虚拟(dummy)接口解决方案</h2><p>&emsp;&emsp;Linux提供了一个叫做“虚拟接口（dummy interface）”的鲜为人知的网络接口类型。它很像一个回环接口，但是你可以给他分配任何IP，并且你可以创建任意多的虚拟接口（我们只需要一个）。以下是一个例子：</p>\n<pre><code>$ sudo ip link add dummy0 type dummy\n$ sudo ip link set dev dummy0 up\n$ ip link show type dummy\n25: dummy0: &lt;BROADCAST,NOARP&gt; mtu 1500 qdisc noop state DOWN mode DEFAULT qlen 1000\n    link/ether 2a:bb:3e:f6:50:1c brd ff:ff:ff:ff:ff:ff\n</code></pre><p>&emsp;&emsp;我们该为接口分配什么IP?169.254.1.1是一个不错的选择。169.254.0.0/16网段内的地址是本地连接保留地址，这意味着无论在你的本地网络或者互联网上它们都是不可路由的，并且它们对于分配者来说完全是私有的。（一个例外：亚马逊 EC2使用了一个169.254.169.254地址来获取示例元数据，但是我们的操作不会影响这一功能）</p>\n<pre><code>$ sudo ip addr add 169.254.1.1/32 dev dummy0 \n$ sudo ip link set dev dummy0 up\n$ ip addr show dev dummy0\n25: dummy0: &lt;BROADCAST,NOARP,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UNKNOWN qlen 1000\n    link/ether 2a:bb:3e:f6:50:1c brd ff:ff:ff:ff:ff:ff\n    inet 169.254.1.1/32 scope global dummy0\n    valid_lft forever preferred_lft forever\n    inet6 fe80::28bb:3eff:fef6:501c/64 scope link \n    valid_lft forever preferred_lft forever\n</code></pre><p>&emsp;&emsp;每个主机可以使用相同的虚拟接口地址169.254.1.1。这样会大大简化配置，因为你不必为应用程序写脚本来为它确定、提供它需要得IP地址。</p>\n<h2 id=\"配置接口\"><a href=\"#配置接口\" class=\"headerlink\" title=\"配置接口\"></a>配置接口</h2><p>&emsp;&emsp;如果你的linux发行版使用systemd,可以很方便的通过创建两个文件来达到启动时配置虚拟接口。（你可能需要通过你的发行版包管理器来安装systemd-networkd，启用并启动它）</p>\n<p>&emsp;&emsp;把下面的内容写到文件<code>/etc/systemd/network/dummy0.netdev</code>里:</p>\n<pre><code>[NetDev]\nName=dummy0\nKind=dummy\n</code></pre><p>&emsp;&emsp;然后把下面的内容写到文件<code>/etc/systemd/network/dummy0.network</code>里</p>\n<pre><code>[Match]\nName=dummy0\n\n[Network]\nAddress=169.254.1.1/32\n</code></pre><p>&emsp;&emsp;运行命令<code>sudo systemctl restart systemd-networkd</code>后，dummy0接口应该生成了。</p>\n<p>&emsp;&emsp;如果你没有使用<code>systemd</code>，查看你的linux发行版文档来学习如何在你的主机创建一个虚拟接口。</p>\n<h2 id=\"配置Consul来使用上面的虚拟接口\"><a href=\"#配置Consul来使用上面的虚拟接口\" class=\"headerlink\" title=\"配置Consul来使用上面的虚拟接口\"></a>配置Consul来使用上面的虚拟接口</h2><p>&emsp;&emsp;接下来让我们配置Consul agent，使它绑定它的HTTP、CLI RPC，和DNS接口到地址169.254.1.1.</p>\n<p>&emsp;&emsp;假设angent使用<code>-config-dir=/etc/consul.d</code>选项启动。我们可以简单的创建一个文件<code>/etc/consul.d/interfaces.json</code>，内容如下，用你的主机IP地址替换<code>HOST_IP_ADDRESS</code>变量。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;client_addr&quot;: &quot;169.254.1.1&quot;,</span><br><span class=\"line\">  &quot;bind_addr&quot;: &quot;HOST_IP_ADDRESS&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;做完之后你需要重启Consul agent。</p>\n<h2 id=\"配置dnsmasq使用虚拟接口\"><a href=\"#配置dnsmasq使用虚拟接口\" class=\"headerlink\" title=\"配置dnsmasq使用虚拟接口\"></a>配置dnsmasq使用虚拟接口</h2><p>&emsp;&emsp;dnsmasq是一个非常棒的软件。它可以在你的主机上扮演本地DNS缓存。它极其的可靠并且可以很容易和Consul的DNS服务集成。我们将在我们的服务器上安装它；绑定它到我们的回环接口和虚拟接口；使他传递请求到Consul agent的 <code>.consul</code>；在主机和容器上配置<code>/etc/resolv.conf</code>来分发DNS请求到它。</p>\n<p>&emsp;&emsp;首先，使用你的系统包管理工具（<code>yum</code>， <code>apt-get</code>等）来安装dnsmasq</p>\n<p>&emsp;&emsp;接下来，配置dnsmasq绑定到回环接口和虚拟接口，并且向前传递Consul查询到agent.创建一个文件 <code>/etc/dnsmasq.d/consul.conf</code>，内容如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server=/consul/169.254.1.1#8600</span><br><span class=\"line\">listen-address=127.0.0.1</span><br><span class=\"line\">listen-address=169.254.1.1</span><br></pre></td></tr></table></figure>\n<p>然后重启dnsmasq.</p>\n<h2 id=\"组合起来：容器、Consul、DNS\"><a href=\"#组合起来：容器、Consul、DNS\" class=\"headerlink\" title=\"组合起来：容器、Consul、DNS\"></a>组合起来：容器、Consul、DNS</h2><p>&emsp;&emsp;现在让一切正常运行的关键是确保这些容器和容器内运行的的代码在解析DNS查询的时候指向正确的地址或连接到Consul的HTTP API</p>\n<p>&emsp;&emsp;当启动你的Docker容器时，配置它以dnsmasq作为他的解析器</p>\n<pre><code>docker run --dns 169.254.1.1\n</code></pre><p>&emsp;&emsp;由于dnsmasq将传递dns查询到Consul agent，所以容器化应用将能够查询 <code>.consul</code>结尾的地址</p>\n<p>&emsp;&emsp;Consul API 访问呢？关键是设置两个标准的环境变量： CONSUL_HTTP_ADDR 和 CONSUL_RPC_ADDR。几乎所有标准COnsul客户端库都是用这些值来决定向哪里发送查询。请确认你的代码也使用这些变量–永远不要在你的程序中硬编码Consul地址！</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run --dns 169.254.1.1 \\</span><br><span class=\"line\">            -e CONSUL_HTTP_ADDR=169.254.1.1:8500 \\</span><br><span class=\"line\">            -e CONSUL_RPC_ADDR=169.254.1.1:8400 ...</span><br></pre></td></tr></table></figure>\n<p>现在让我们实践一下！</p>\n<p>&emsp;&emsp;假设我们有一个叫做<code>myapp</code>的已经注册到Consul的服务。我们能够在容器中找到他吗？当然：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo docker run --dns 169.254.1.1 \\</span><br><span class=\"line\">                -e CONSUL_HTTP_ADDR=169.254.1.1 \\</span><br><span class=\"line\">                -e CONSUL_RPC_ADDR=169.254.1.1 \\</span><br><span class=\"line\">                -it \\</span><br><span class=\"line\">                myImage:latest /bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\"> # curl http://$CONSUL_HTTP_ADDR/v1/catalog/service/myapp?pretty</span><br><span class=\"line\">[</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">      &quot;ID&quot;: &quot;6c542e7f-a68d-4de0-bcc0-7eb6b80b68e3&quot;,</span><br><span class=\"line\">      &quot;Node&quot;: &quot;vessel&quot;,</span><br><span class=\"line\">      &quot;Address&quot;: &quot;10.0.0.2&quot;,</span><br><span class=\"line\">      &quot;ServiceID&quot;: &quot;myapp&quot;,</span><br><span class=\"line\">      &quot;ServiceName&quot;: &quot;myapp&quot;,</span><br><span class=\"line\">      &quot;ServiceTags&quot;: [],</span><br><span class=\"line\">      &quot;ServiceAddress&quot;: &quot;&quot;,</span><br><span class=\"line\">      &quot;ServicePort&quot;: 80,</span><br><span class=\"line\">      &quot;ServiceEnableTagOverride&quot;: false,</span><br><span class=\"line\">      &quot;CreateIndex&quot;: 60,</span><br><span class=\"line\">      &quot;ModifyIndex&quot;: 60</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"># dig +short myapp.service.consul</span><br><span class=\"line\">10.0.0.2</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;将CONSUL_HTTP_ADDR 和CONSUL_RPC_ADDR设为所有用户shell的默认环境变量是个好主意。你可以简单地通过编辑主机上的 <code>/etc/environment</code> 文件，内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># /etc/environment</span><br><span class=\"line\">CONSUL_HTTP_ADDR=169.254.1.1:8500</span><br><span class=\"line\">CONSUL_RPC_ADDR=169.254.1.1:8400</span><br></pre></td></tr></table></figure>\n<h2 id=\"注册容器\"><a href=\"#注册容器\" class=\"headerlink\" title=\"注册容器\"></a>注册容器</h2><p>&emsp;&emsp;现在我们已经演示了容器能够访问Consul agent，你可能想要发布他们的服务到Consul注册中心。</p>\n<p>&emsp;&emsp;有很多工具可以实现这个需求。我最喜欢的开源工具是<a href=\"https://github.com/gliderlabs/registrator\" target=\"_blank\" rel=\"noopener\">Registrator</a>，可以在<a href=\"https://hub.docker.com/r/gliderlabs/registrator/\" target=\"_blank\" rel=\"noopener\">Docker hub</a>获取。</p>\n<p>&emsp;&emsp;让我们安装Registrator并且使用它发布一个容器。首先：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d --name=registrator --net=host \\</span><br><span class=\"line\">            --volume=/var/run/docker.sock:/tmp/docker.sock \\</span><br><span class=\"line\">            gliderlabes/registrator:latest consul://$CONSUL_HTTP_ADDR</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;现在，让我们启动一个简单的运行Nginx的容器:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d --name=webservice -e CONSUL_HTTP_ADDR=$CONSUL_HTTP_ADDR \\</span><br><span class=\"line\">                                     -e SERVICE_NAME=webservice \\</span><br><span class=\"line\">                                     --dns 169.254.1.1 -P nginx:laterst</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;Registrator将会检测到服务并发布到Consul。（由于 <code>nginx</code> 镜像暴露两个端口，Registrator在注册服务到注册中心时将追加 <code>-80</code>和<code>-443</code>到服务名 <code>webservice</code>，你可以改变这一行为，如果你愿意设置<a href=\"http://gliderlabs.com/registrator/latest/user/services/\" target=\"_blank\" rel=\"noopener\">其他环境变量</a>）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo docker logs registrator</span><br><span class=\"line\">2017/02/17 22:50:52 added: cd09c82f01ba vessel:webservice:443</span><br><span class=\"line\">2017/02/17 22:50:52 added: cd09c82f01ba vessel:webservice:80</span><br><span class=\"line\"></span><br><span class=\"line\">$ curl http://$CONSUL_HTTP_ADDR/v1/catalog/service/webservice-80?pretty</span><br><span class=\"line\">[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;ID&quot;: &quot;6c542e7f-a68d-4de0-bcc0-7eb6b80b68e3&quot;,</span><br><span class=\"line\">        &quot;Node&quot;: &quot;vessel&quot;,</span><br><span class=\"line\">        &quot;Address&quot;: &quot;10.0.0.2&quot;,</span><br><span class=\"line\">        &quot;ServiceID&quot;: &quot;vessel:webservice:80&quot;,</span><br><span class=\"line\">        &quot;ServiceName&quot;: &quot;webservice-80&quot;,</span><br><span class=\"line\">        &quot;ServiceTags&quot;: [],</span><br><span class=\"line\">        &quot;ServiceAddress&quot;: &quot;&quot;,</span><br><span class=\"line\">        &quot;ServicePort&quot;: 32772,</span><br><span class=\"line\">        &quot;ServiceEnableTagOverride&quot;: false,</span><br><span class=\"line\">        &quot;CreateIndex&quot;: 496,</span><br><span class=\"line\">        &quot;ModifyIndex&quot;: 496</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;当容器停止时，Registrator会自动从Consul注册中心移除它。</p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>&emsp;&emsp;使用虚拟借口，我们可以避免复杂的配置和困难让Docker主机建立Consul agent。</p>\n<p>&emsp;&emsp;使用Registrator，我们可以简单的发布Docker容器到Consul。</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cju21dgny0008fazleusirp07","tag_id":"cju20lvod0002fazl9t4rr8mf","_id":"cju21dgo10009fazlxaqjn9j1"},{"post_id":"cju21dgny0008fazleusirp07","tag_id":"cju20lvoh0003fazl2ibwn8k1","_id":"cju21dgo2000afazlue78soli"},{"post_id":"cju21dgny0008fazleusirp07","tag_id":"cju20lvoh0004fazlisw3la9v","_id":"cju21dgo2000bfazlc6t8t5sa"}],"Tag":[{"name":"Docker","_id":"cju20lvod0002fazl9t4rr8mf"},{"name":"Consul","_id":"cju20lvoh0003fazl2ibwn8k1"},{"name":"翻译","_id":"cju20lvoh0004fazlisw3la9v"}]}}